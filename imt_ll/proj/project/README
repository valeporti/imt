AUTHORS
-------

- NAME1
- NAME2
…

===============

Description of the project
--------------------------

This μ-project is a very simple compiler…

===============

Sources
-------

Git repository: https://redmine-df.telecom-bretagne.eu/git/PROJECTNAME

(obviously, you _will_ use a version control system such as Git, IMT
Atlantique provides a project management platform: use it!)

Release : tag 1.0 or commit acdeacdacdacdacd

===============

How to…
-------

…retrieve the sources?

  git clone https://redmine-df.telecom-bretagne.eu/git/PROJECTNAME

…compile?

  ocamlbuild …

…execute and test?

  ocamlbuild main.byte -- TESTFILE.pfx


===============

Structure of the project
------------------------

The project is organized as following:

Explain here the organization of your project, what is the use of each file or
group of files, etc.

You may also show the file tree as the following example:

project
├── README
├── _tags: configuration file for ocamlbuild
├── expr: the expr compiler
│   ├── binOp.ml
│   ├── binOp.mli
│   ├── exprAst.ml
│   ├── exprAst.mli
│   ├── exprEval.ml
│   ├── exprEval.mli
│   ├── exprLexer.mll
│   ├── exprParser.mli
│   ├── exprParser.mly
│   ├── exprToPfx.ml               <- To edit
│   └── exprToPfx.mli
├── exprMain.ml: main file for the expr compiler
├── expr_fun: the expr parser for section 7
│   ├── exprAst.ml
│   ├── exprAst.mli
│   ├── exprLexer.mll
│   └── exprParser.mly
├── pfx: the pfx VM
│   ├── pfxAst.ml                  <- To edit
│   ├── pfxEval.ml                 <- To edit
│   ├── pfxLexer.mll               <- To edit
│   └── pfxParser.mly              <- To edit
├── pfxVM.ml: main file for the pfx VM
├── tests: tests starting by err raise errors !!! You should add more tests !!!
│   ├── err_prog0.pfx
│   ├── err_prog1.pfx
│   ├── ok_first.pfx
│   ├── ok_1arg.pfx
│   ├── ok_2args.pfx
│   ├── ok_example_from_lecture0.pfx
│   ├── ok_example_from_lecture1.pfx
│   ├── ok_prog.pfx
│   └── ok_second.pfx
└── utils
    ├── location.ml: module offering a data type for a location in a file
    └── location.mli

===============

Progress
--------

- We stopped at question 10.1 (proof of derivation)
- There is still a bug in question 8.3 (new version of generate function)
- …

===============

Know bugs and issues
--------------------

- We were not able to manage xxx…
- Compiler fails when xxx…
- …

===============

Helpful resources
-----------------

- we used Stack Overflow to solve the problem of xxx :
  https://stackoverflow/xxxxxxi
  https://stackoverflow/yyyyyy
- someone on GitHub provided an interesting example very similar to the answer of the question x.y : https://github.com/xxxx
- …

===============

Difficulties
------------

- team programming: having to use a VCS such as git and avoiding conflicts
- thinking functional
- changing habits by using an unknown language
- Not a single difficulty: the project was so easy that my 8-old brother did it
  completely; the Ocaml language is so nice I enjoyed the project, …
- …

