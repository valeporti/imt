### Starting build.
# Target: exprMain.ml.depends, tags: { debug, explain, extension:ml, file:exprMain.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules exprMain.ml > exprMain.ml.depends # cached
# Target: expr/exprLexer.mll, tags: { debug, explain, extension:mll, file:expr/exprLexer.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir, warn_a }
ocamllex.opt -q expr/exprLexer.mll # cached
# Target: expr/exprLexer.ml.depends, tags: { debug, explain, extension:ml, file:expr/exprLexer.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprLexer.ml > expr/exprLexer.ml.depends # cached
# Target: expr/exprParser.mly.depends, tags: { debug, explain, extension:mly, file:expr/exprParser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
menhir --raw-depend --ocamldep 'ocamldep.opt -modules' expr/exprParser.mly > expr/exprParser.mly.depends # cached
# Target: expr/binOp.mli.depends, tags: { debug, explain, extension:mli, file:expr/binOp.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/binOp.mli > expr/binOp.mli.depends # cached
# Target: expr/binOp.cmi, tags: { byte, compile, debug, explain, extension:mli, file:expr/binOp.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/binOp.cmi expr/binOp.mli # cached
# Target: expr/exprAst.mli.depends, tags: { debug, explain, extension:mli, file:expr/exprAst.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprAst.mli > expr/exprAst.mli.depends # cached
# Target: expr/exprAst.cmi, tags: { byte, compile, debug, explain, extension:mli, file:expr/exprAst.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprAst.cmi expr/exprAst.mli # cached
# Target: expr/exprParser.mly, tags: { byte, compile, debug, explain, extension:ml, extension:mly, file:expr/exprParser.ml, file:expr/exprParser.mly, infer, menhir, ocaml, parser, quiet, traverse, use_menhir, warn_a }
menhir --ocamlc 'ocamlc.opt -g -w a -I expr -I utils -I pfx' --explain --infer expr/exprParser.mly # cached
# Target: expr/exprParser.mli.depends, tags: { debug, explain, extension:mli, file:expr/exprParser.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprParser.mli > expr/exprParser.mli.depends # cached
# Target: expr/exprParser.cmi, tags: { byte, compile, debug, explain, extension:mli, file:expr/exprParser.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprParser.cmi expr/exprParser.mli # cached
# Target: utils/location.mli.depends, tags: { debug, explain, extension:mli, file:utils/location.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules utils/location.mli > utils/location.mli.depends # cached
# Target: utils/location.cmi, tags: { byte, compile, debug, explain, extension:mli, file:utils/location.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I utils -I pfx -I expr -o utils/location.cmi utils/location.mli # cached
# Target: expr/exprLexer.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:expr/exprLexer.cmo, file:expr/exprLexer.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprLexer.cmo expr/exprLexer.ml # cached
# Target: expr/exprToPfx.mli.depends, tags: { debug, explain, extension:mli, file:expr/exprToPfx.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprToPfx.mli > expr/exprToPfx.mli.depends # cached
# Target: pfx/pfxAst.ml.depends, tags: { debug, explain, extension:ml, file:pfx/pfxAst.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules pfx/pfxAst.ml > pfx/pfxAst.ml.depends # cached
# Target: pfx/pfxAst.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:pfx/pfxAst.cmo, file:pfx/pfxAst.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I pfx -I utils -I expr -o pfx/pfxAst.cmo pfx/pfxAst.ml # cached
# Target: expr/exprToPfx.cmi, tags: { byte, compile, debug, explain, extension:mli, file:expr/exprToPfx.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprToPfx.cmi expr/exprToPfx.mli # cached
# Target: pfx/pfxEval.ml.depends, tags: { debug, explain, extension:ml, file:pfx/pfxEval.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules pfx/pfxEval.ml > pfx/pfxEval.ml.depends
# Target: pfx/pfxParser.mly.depends, tags: { debug, explain, extension:mly, file:pfx/pfxParser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
menhir --raw-depend --ocamldep 'ocamldep.opt -modules' pfx/pfxParser.mly > pfx/pfxParser.mly.depends # cached
# Target: pfx/pfxParser.mly, tags: { byte, compile, debug, explain, extension:ml, extension:mly, file:pfx/pfxParser.ml, file:pfx/pfxParser.mly, infer, menhir, ocaml, parser, quiet, traverse, use_menhir, warn_a }
menhir --ocamlc 'ocamlc.opt -g -w a -I pfx -I utils -I expr' --explain --infer pfx/pfxParser.mly # cached
# Target: pfx/pfxParser.mli.depends, tags: { debug, explain, extension:mli, file:pfx/pfxParser.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules pfx/pfxParser.mli > pfx/pfxParser.mli.depends # cached
# Target: pfx/pfxEval.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:pfx/pfxEval.cmo, file:pfx/pfxEval.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I pfx -I utils -I expr -o pfx/pfxEval.cmo pfx/pfxEval.ml
# Target: pfx/pfxParser.cmi, tags: { byte, compile, debug, explain, extension:mli, file:pfx/pfxParser.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I pfx -I utils -I expr -o pfx/pfxParser.cmi pfx/pfxParser.mli
# Target: exprMain.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:exprMain.cmo, file:exprMain.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I utils -I pfx -I expr -o exprMain.cmo exprMain.ml
# Target: expr/exprParser.ml.depends, tags: { debug, explain, extension:ml, file:expr/exprParser.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprParser.ml > expr/exprParser.ml.depends
# Target: expr/exprToPfx.ml.depends, tags: { debug, explain, extension:ml, file:expr/exprToPfx.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprToPfx.ml > expr/exprToPfx.ml.depends
+ ocamldep.opt -modules expr/exprToPfx.ml > expr/exprToPfx.ml.depends
File "expr/exprToPfx.ml", line 15, characters 34-38:
Error: Syntax error
Command exited with code 2.
# Compilation unsuccessful.
