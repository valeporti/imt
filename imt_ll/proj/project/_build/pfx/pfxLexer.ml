# 1 "pfx/pfxLexer.mll"
 
  open PfxParser

  let mk_int nb loc =
    try INT (int_of_string nb)
    with Failure _ -> raise (Location.Error(Printf.sprintf "Illegal integer '%s': " nb,loc))

# 10 "pfx/pfxLexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\244\255\000\000\000\000\001\000\002\000\000\000\036\000\
    \001\000\253\255\006\000\255\255\001\000\006\000\001\000\250\255\
    \000\000\249\255\002\000\000\000\248\255\246\255\002\000\247\255\
    \000\000\000\000\245\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\011\000\011\000\011\000\011\000\011\000\004\000\
    \011\000\255\255\001\000\255\255\000\000\003\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\255\255\013\000\255\255\000\000\
    \255\255\000\000\255\255\255\255\000\000\000\000\255\255\000\000\
    \255\255\255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\010\000\011\000\011\000\010\000\012\000\010\000\010\000\
    \255\255\000\000\010\000\255\255\010\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \010\000\000\000\000\000\000\000\000\000\000\000\010\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\008\000\013\000\000\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\006\000\000\000\000\000\003\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\
    \002\000\000\000\000\000\005\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\000\000\000\000\
    \000\000\000\000\017\000\000\000\014\000\015\000\021\000\000\000\
    \026\000\022\000\000\000\000\000\020\000\000\000\000\000\000\000\
    \018\000\000\000\000\000\025\000\000\000\024\000\019\000\016\000\
    \023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \009\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\012\000\000\000\000\000\000\000\010\000\
    \013\000\255\255\010\000\013\000\010\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\010\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\008\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \000\000\255\255\255\255\000\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\255\255\255\255\
    \255\255\255\255\016\000\255\255\006\000\014\000\018\000\255\255\
    \025\000\003\000\255\255\255\255\019\000\255\255\255\255\255\255\
    \004\000\255\255\255\255\024\000\255\255\002\000\004\000\005\000\
    \022\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\013\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 17 "pfx/pfxLexer.mll"
            ( Location.incr_line lexbuf; token lexbuf )
# 124 "pfx/pfxLexer.ml"

  | 1 ->
# 19 "pfx/pfxLexer.mll"
            ( token lexbuf )
# 129 "pfx/pfxLexer.ml"

  | 2 ->
# 21 "pfx/pfxLexer.mll"
             ( EOF )
# 134 "pfx/pfxLexer.ml"

  | 3 ->
# 23 "pfx/pfxLexer.mll"
                            ( token lexbuf )
# 139 "pfx/pfxLexer.ml"

  | 4 ->
let
# 25 "pfx/pfxLexer.mll"
               nb
# 145 "pfx/pfxLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 25 "pfx/pfxLexer.mll"
                            ( mk_int nb (Location.curr lexbuf))
# 149 "pfx/pfxLexer.ml"

  | 5 ->
# 28 "pfx/pfxLexer.mll"
          ( Padd )
# 154 "pfx/pfxLexer.ml"

  | 6 ->
# 29 "pfx/pfxLexer.mll"
          ( Psub )
# 159 "pfx/pfxLexer.ml"

  | 7 ->
# 30 "pfx/pfxLexer.mll"
          ( Pmul )
# 164 "pfx/pfxLexer.ml"

  | 8 ->
# 31 "pfx/pfxLexer.mll"
          ( Pdiv )
# 169 "pfx/pfxLexer.ml"

  | 9 ->
# 32 "pfx/pfxLexer.mll"
          ( Pmod )
# 174 "pfx/pfxLexer.ml"

  | 10 ->
# 33 "pfx/pfxLexer.mll"
           ( Ppush )
# 179 "pfx/pfxLexer.ml"

  | 11 ->
let
# 35 "pfx/pfxLexer.mll"
         c
# 185 "pfx/pfxLexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 35 "pfx/pfxLexer.mll"
            (
      raise (Location.Error(Printf.sprintf "Illegal character '%c': " c, Location.curr lexbuf))
    )
# 191 "pfx/pfxLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

