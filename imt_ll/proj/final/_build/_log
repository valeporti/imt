### Starting build.
# Target: tests.ml.depends, tags: { debug, explain, extension:ml, file:tests.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules tests.ml > tests.ml.depends # cached
# Target: testFun.ml.depends, tags: { debug, explain, extension:ml, file:testFun.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules testFun.ml > testFun.ml.depends # cached
# Target: expr/exprLexer.mll, tags: { debug, explain, extension:mll, file:expr/exprLexer.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir, warn_a }
ocamllex.opt -q expr/exprLexer.mll # cached
# Target: expr/exprLexer.ml.depends, tags: { debug, explain, extension:ml, file:expr/exprLexer.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprLexer.ml > expr/exprLexer.ml.depends # cached
# Target: expr/exprParser.mly.depends, tags: { debug, explain, extension:mly, file:expr/exprParser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
menhir --raw-depend --ocamldep 'ocamldep.opt -modules' expr/exprParser.mly > expr/exprParser.mly.depends # cached
# Target: expr/binOp.mli.depends, tags: { debug, explain, extension:mli, file:expr/binOp.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/binOp.mli > expr/binOp.mli.depends # cached
# Target: expr/binOp.cmi, tags: { byte, compile, debug, explain, extension:mli, file:expr/binOp.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/binOp.cmi expr/binOp.mli # cached
# Target: expr/exprAst.mli.depends, tags: { debug, explain, extension:mli, file:expr/exprAst.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprAst.mli > expr/exprAst.mli.depends # cached
# Target: expr/exprAst.cmi, tags: { byte, compile, debug, explain, extension:mli, file:expr/exprAst.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprAst.cmi expr/exprAst.mli # cached
# Target: expr/exprParser.mly, tags: { byte, compile, debug, explain, extension:ml, extension:mly, file:expr/exprParser.ml, file:expr/exprParser.mly, infer, menhir, ocaml, parser, quiet, traverse, use_menhir, warn_a }
menhir --ocamlc 'ocamlc.opt -g -w a -I expr -I utils -I pfx' --explain --infer expr/exprParser.mly # cached
# Target: expr/exprParser.mli.depends, tags: { debug, explain, extension:mli, file:expr/exprParser.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprParser.mli > expr/exprParser.mli.depends # cached
# Target: expr/exprParser.cmi, tags: { byte, compile, debug, explain, extension:mli, file:expr/exprParser.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprParser.cmi expr/exprParser.mli # cached
# Target: utils/location.mli.depends, tags: { debug, explain, extension:mli, file:utils/location.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules utils/location.mli > utils/location.mli.depends # cached
# Target: utils/location.cmi, tags: { byte, compile, debug, explain, extension:mli, file:utils/location.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I utils -I pfx -I expr -o utils/location.cmi utils/location.mli # cached
# Target: expr/exprLexer.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:expr/exprLexer.cmo, file:expr/exprLexer.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprLexer.cmo expr/exprLexer.ml # cached
# Target: expr/exprToPfx.mli.depends, tags: { debug, explain, extension:mli, file:expr/exprToPfx.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprToPfx.mli > expr/exprToPfx.mli.depends # cached
# Target: pfx/pfxAst.ml.depends, tags: { debug, explain, extension:ml, file:pfx/pfxAst.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules pfx/pfxAst.ml > pfx/pfxAst.ml.depends # cached
# Target: pfx/pfxAst.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:pfx/pfxAst.cmo, file:pfx/pfxAst.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I pfx -I utils -I expr -o pfx/pfxAst.cmo pfx/pfxAst.ml # cached
# Target: expr/exprToPfx.cmi, tags: { byte, compile, debug, explain, extension:mli, file:expr/exprToPfx.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprToPfx.cmi expr/exprToPfx.mli # cached
# Target: helpers.ml.depends, tags: { debug, explain, extension:ml, file:helpers.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules helpers.ml > helpers.ml.depends # cached
# Target: pfx/pfxLexerTest.mll, tags: { debug, explain, extension:mll, file:pfx/pfxLexerTest.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir, warn_a }
ocamllex.opt -q pfx/pfxLexerTest.mll # cached
# Target: pfx/pfxLexerTest.ml.depends, tags: { debug, explain, extension:ml, file:pfx/pfxLexerTest.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules pfx/pfxLexerTest.ml > pfx/pfxLexerTest.ml.depends # cached
# Target: pfx/pfxLexerTest.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:pfx/pfxLexerTest.cmo, file:pfx/pfxLexerTest.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I pfx -I utils -I expr -o pfx/pfxLexerTest.cmo pfx/pfxLexerTest.ml # cached
# Target: helpers.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:helpers.cmo, file:helpers.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I utils -I pfx -I expr -o helpers.cmo helpers.ml # cached
# Target: pfx/pfxEval.ml.depends, tags: { debug, explain, extension:ml, file:pfx/pfxEval.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules pfx/pfxEval.ml > pfx/pfxEval.ml.depends # cached
# Target: pfx/pfxEval.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:pfx/pfxEval.cmo, file:pfx/pfxEval.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I pfx -I utils -I expr -o pfx/pfxEval.cmo pfx/pfxEval.ml # cached
# Target: pfx/pfxLexer.mll, tags: { debug, explain, extension:mll, file:pfx/pfxLexer.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir, warn_a }
ocamllex.opt -q pfx/pfxLexer.mll # cached
# Target: pfx/pfxLexer.ml.depends, tags: { debug, explain, extension:ml, file:pfx/pfxLexer.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules pfx/pfxLexer.ml > pfx/pfxLexer.ml.depends # cached
# Target: pfx/pfxParser.mly.depends, tags: { debug, explain, extension:mly, file:pfx/pfxParser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
menhir --raw-depend --ocamldep 'ocamldep.opt -modules' pfx/pfxParser.mly > pfx/pfxParser.mly.depends # cached
# Target: pfx/pfxParser.mly, tags: { byte, compile, debug, explain, extension:ml, extension:mly, file:pfx/pfxParser.ml, file:pfx/pfxParser.mly, infer, menhir, ocaml, parser, quiet, traverse, use_menhir, warn_a }
menhir --ocamlc 'ocamlc.opt -g -w a -I pfx -I utils -I expr' --explain --infer pfx/pfxParser.mly # cached
# Target: pfx/pfxParser.mli.depends, tags: { debug, explain, extension:mli, file:pfx/pfxParser.mli, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules pfx/pfxParser.mli > pfx/pfxParser.mli.depends # cached
# Target: pfx/pfxParser.cmi, tags: { byte, compile, debug, explain, extension:mli, file:pfx/pfxParser.mli, interf, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I pfx -I utils -I expr -o pfx/pfxParser.cmi pfx/pfxParser.mli # cached
# Target: pfx/pfxLexer.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:pfx/pfxLexer.cmo, file:pfx/pfxLexer.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I pfx -I utils -I expr -o pfx/pfxLexer.cmo pfx/pfxLexer.ml # cached
# Target: testFun.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:testFun.cmo, file:testFun.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I utils -I pfx -I expr -o testFun.cmo testFun.ml # cached
# Target: tests.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:tests.cmo, file:tests.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I utils -I pfx -I expr -o tests.cmo tests.ml # cached
# Target: expr/exprParser.ml.depends, tags: { debug, explain, extension:ml, file:expr/exprParser.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprParser.ml > expr/exprParser.ml.depends # cached
# Target: expr/exprParser.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:expr/exprParser.cmo, file:expr/exprParser.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprParser.cmo expr/exprParser.ml # cached
# Target: expr/exprToPfx.ml.depends, tags: { debug, explain, extension:ml, file:expr/exprToPfx.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprToPfx.ml > expr/exprToPfx.ml.depends # cached
# Target: expr/exprToPfx.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:expr/exprToPfx.cmo, file:expr/exprToPfx.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprToPfx.cmo expr/exprToPfx.ml # cached
# Target: utils/location.ml.depends, tags: { debug, explain, extension:ml, file:utils/location.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules utils/location.ml > utils/location.ml.depends # cached
# Target: utils/location.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:utils/location.cmo, file:utils/location.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I utils -I pfx -I expr -o utils/location.cmo utils/location.ml # cached
# Target: pfx/pfxParser.ml.depends, tags: { debug, explain, extension:ml, file:pfx/pfxParser.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules pfx/pfxParser.ml > pfx/pfxParser.ml.depends # cached
# Target: pfx/pfxParser.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:pfx/pfxParser.cmo, file:pfx/pfxParser.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I pfx -I utils -I expr -o pfx/pfxParser.cmo pfx/pfxParser.ml # cached
# Target: expr/binOp.ml.depends, tags: { debug, explain, extension:ml, file:expr/binOp.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/binOp.ml > expr/binOp.ml.depends # cached
# Target: expr/binOp.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:expr/binOp.cmo, file:expr/binOp.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/binOp.cmo expr/binOp.ml # cached
# Target: expr/exprAst.ml.depends, tags: { debug, explain, extension:ml, file:expr/exprAst.ml, ocaml, ocamldep, quiet, traverse, use_menhir, warn_a }
ocamldep.opt -modules expr/exprAst.ml > expr/exprAst.ml.depends # cached
# Target: expr/exprAst.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:expr/exprAst.cmo, file:expr/exprAst.ml, implem, ocaml, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -c -g -w a -I expr -I utils -I pfx -o expr/exprAst.cmo expr/exprAst.ml # cached
# Target: tests.byte, tags: { byte, debug, dont_link_with, explain, extension:byte, file:tests.byte, link, ocaml, program, quiet, traverse, use_menhir, warn_a }
ocamlc.opt -g -I expr -I utils -I pfx expr/binOp.cmo expr/exprAst.cmo expr/exprParser.cmo utils/location.cmo expr/exprLexer.cmo pfx/pfxAst.cmo expr/exprToPfx.cmo pfx/pfxLexerTest.cmo helpers.cmo pfx/pfxEval.cmo pfx/pfxParser.cmo pfx/pfxLexer.cmo testFun.cmo tests.cmo -o tests.byte # cached
# Compilation successful.
